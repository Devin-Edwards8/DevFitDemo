{"version":3,"sources":["src/assets/icons/new_nutrition_icon.png","src/assets/icons/new_home_icon.png","src/assets/icons/new_fitness_icon.png","src/assets/icons/close_icon.png","src/assets/icons/settings_icon.png","src/assets/fonts/TitanOne-Regular.ttf","src/assets/icons/info_icon.png","src/assets/icons/close_icon2.png","src/assets/icons/editing_icon.jpeg","src/assets/icons/not_editing_icon.jpeg","src/assets/icons/search_icon.png","src/global_colors.js","src/components/BottomNavBar.js","src/components/Header.js","src/components/Title.js","src/containers/MainScreen.js","src/components/Card.js","src/components/Tag.js","src/components/InputRow.js","src/components/CardButtons.js","src/components/Row.js","src/components/ExpandedCard.js","src/containers/FitnessScreen.js","src/components/SearchBar.js","src/components/SearchResults.js","src/containers/NutritionScreen.js","src/containers/Settings.js","src/demo_settings.js","src/App.js","index.js"],"names":["module","exports","colorTheme","background","bars","boldTheme","mediumTheme","lightTheme","accent","BottomNavBar","View","style","styles","navbar","onTouchEnd","props","onSwitch","button","onClick","Image","image","source","require","react","Component","EStyleSheet","create","flex","width","height","flexDirection","backgroundColor","alignItems","justifyContent","cursor","Header","strip","screen","onClose","onAdd","Text","add","marginLeft","marginBottom","color","fontSize","marginRight","Title","useFonts","fontsLoaded","useEffect","SplashScreen","prepare","onLayoutRootView","useCallback","title","onLayout","StyleSheet","fontFamily","marginTop","MainScreen","Poppins_400Regular","Poppins_300Light","day","Date","getDay","quote","time","getTime","Math","round","quotes","split","getQuote","container","StatusBar","mainContainer","boxContainer","box","wideBox","cardTitle","rule","reportSection","workoutComplete","status","currentDay","splits","length","reportText","getWorkoutCompleteMessage","Number","completeButton","completeWorkout","weeklyProgress","buttonText","getWorkoutMessage","nutritionPercent","progressBars","value","goal","isNaN","getNutritionText","narrowBox","smallTitle","icon","widthAndHeight","$pieSize","series","pieGap","sliceColor","body","ruleGap","maxHeight","borderTopWidth","borderColor","borderRadius","maxWidth","minWidth","paddingLeft","paddingRight","textAlign","padding","aspectRatio","Card","useState","del","setDelete","card","onSwipeLeft","onSwipeRight","cardDel","cardText","deleteButton","onDeleteCard","id","deleteText","handleExpand","viewMode","minHeight","borderBottomWidth","Tag","tagStyles","hollow","red","yellow","green","tagStyle","num","editMode","editTag","edit","onTagClick","cardID","tag","static","position","right","top","zIndex","opacity","borderWidth","borderStyle","InputRow","rowTitle","textContainer","TextInput","inputText","placeholder","placeholderTextColor","onChangeText","payload","onRowText","text","tagNo","numberText","borderLeftWidth","borderRightWidth","lineHeight","paddingTop","paddingBottom","CardButtons","Poppins_500Medium","onDelete","Row","text0","text1","text2","workoutText","ExpandedCard","toggleEdit","$lightPad","titleContainer","close","onCondense","cardNo","rows","map","row","alignSelf","FitnessScreen","cards","state","setState","outerContainer","onTitleChange","onAddRow","onDeleteRow","innerContainer","blur","onAddCard","ScrollView","SearchBar","searchRef","React","createRef","searchText","changeText","searchBar","onSubmitEditing","current","clear","handleSearch","ref","load","autoCapitalize","boldAccent","SearchResults","flexGrow","results","food","resultHeader","name","resultText","serving_size_g","calories","protein_g","submission","onSubmission","return","onReturn","searched","margin","$checkSize","NutritionScreen","input1","input2","settingMode","manualEntry","currentCalorieValue","currentProteinValue","url","response","fetch","method","headers","result","json","error","console","p0","p1","calcRatio","val","ratio","cals","prot","onValueChange","nutritionContainer","chartsAndSearch","chartBox","chartContainer","chartText","$subHeight","submissionTitle","submissionEntries","entryBox","submissionButton","Keyboard","dismiss","SettingsScreen","editing","setCalories","setProtein","currentCalorieGoal","setCalorieGoal","currentProteinGoal","setProteinGoal","submitValue","onValueAdjustment","submitGoal","onGoalSet","splitRows","Array","from","rotationLength","_","i","subtitle","topRow","rowText","rightMargin","toggle","toggle1","setToggle","setToggle1","size","$toggleSize","circleColor","filled","toggle2","setToggle2","buttonContainer","toggle3","setToggle3","setSplit","e","ind","tempSplits","handleSplitEntry","isInteger","log","handleSplitDay","String","doubleRow","inputContainer","demo_cards","demo_split","demo_rows","0","1","2","3","demo_bars","build","registerRootComponent","defaultCards","demo_settings","defaultRows","defaultBars","defaultSplits","currentScreen","setCurrentScreen","setCards","useAsyncStorage","setItem","getItem","setRows","setProgressBars","customRotation","switchScreen","screenNum","loadWorkouts","catch","loadProgress","loadRows","loadCompletion","loadSplits","loadLogin","handleGoal","tempProgressBars","forEach","element","saveProgress","handleValueReset","saveCompletion","truth","AsyncStorage","JSON","stringify","saveSplits","screens","newCards","filter","c","saveRows","saveWorkouts","tempRows","cardNum","uniqueID","tempCards","ids","max","apply","string","index","onReset","tempProgressBars1","tempProgressBars2","oldBars","parse","oldRows","saveLogin","d","date","getMonth","getDate","getFullYear","lastDate","dif","abs","cur","oldSplits","oldCards"],"mappings":"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","file":"static/js/app.8ec80c57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new_nutrition_icon.fabbf719.png\";","module.exports = __webpack_public_path__ + \"static/media/new_home_icon.624b4e79.png\";","module.exports = __webpack_public_path__ + \"static/media/new_fitness_icon.19ca3f23.png\";","module.exports = __webpack_public_path__ + \"static/media/close_icon.1614452f.png\";","module.exports = __webpack_public_path__ + \"static/media/settings_icon.fd41d68e.png\";","module.exports = __webpack_public_path__ + \"./fonts/TitanOne-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/info_icon.49bdd307.png\";","module.exports = __webpack_public_path__ + \"static/media/close_icon2.1fd4c6d0.png\";","module.exports = __webpack_public_path__ + \"static/media/editing_icon.b3a02829.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/not_editing_icon.2d9b04dd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/search_icon.e768c58f.png\";","// color theme\n\nconst colorTheme = {\n    background: '#FFFFFF',\n    bars: '#353535',\n    boldTheme: '#284B63',\n    mediumTheme: '#94A5B1',\n    lightTheme: '#F2F4F6',\n    accent: '#CB143D'\n}\n\nexport {colorTheme}","import react from 'react'\nimport { View, Image } from 'react-native'\nimport { colorTheme } from '../global_colors';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default class BottomNavBar extends react.Component {\n    render() {\n        return (\n            <View style={styles.navbar}>\n                <View onTouchEnd={() => this.props.onSwitch(2)} style={styles.button} onClick={() => this.props.onSwitch(2)}>\n                    <Image style={styles.image} source={require('../assets/icons/new_nutrition_icon.png')} />\n                </View>\n                <View onTouchEnd={() => this.props.onSwitch(0)} style={styles.button} onClick={() => this.props.onSwitch(0)}>\n                    <Image style={styles.image} source={require('../assets/icons/new_home_icon.png')} />\n                </View>\n                <View onTouchEnd={() => this.props.onSwitch(1)} style={styles.button} onClick={() => this.props.onSwitch(1)}>\n                    <Image style={styles.image} source={require('../assets/icons/new_fitness_icon.png')} />\n                </View>\n            </View>\n        );\n    }\n}\n \nconst styles = EStyleSheet.create({\n    navbar: {\n        flex: 1,\n        width: '100%',\n        height: '10%',\n        flexDirection: 'row',\n        backgroundColor: colorTheme.bars\n    },\n    button: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        width: '33.3%'\n    },\n    image: {\n        width: '3rem',\n        height: '3rem',\n        cursor: 'pointer'\n    }\n});","import { View, Image, Text } from 'react-native';\nimport React from 'react';\nimport { colorTheme } from '../global_colors';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function Header(props) {\n    return (\n        <View style={styles.strip}>\n            {props.screen === \"settings\" ? \n            <Image style={styles.image} source={require('../assets/icons/close_icon.png')} onTouchEnd={() => props.onClose(0)} onClick={() => props.onClose(0)}/> :\n            <Image style={styles.image} source={require('../assets/icons/settings_icon.png')} onTouchEnd={() => props.onSwitch(3)} onClick={() => props.onSwitch(3)}/>\n            }\n            {props.screen === \"fitness\" ? <View onTouchEnd={() => props.onAdd()} onClick={() => props.onAdd()}><Text style={styles.add}>+</Text></View> : <></>}\n        </View>\n    );\n}\n\nconst styles = EStyleSheet.create({\n    strip: {\n        flex: 1,\n        alignItems: 'flex-end',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        width: '100%',\n        height: '10%',\n        backgroundColor: colorTheme.bars\n    },\n    image: {\n        width: '1.5rem',\n        height: '1.5rem',\n        marginLeft: '1rem',\n        marginBottom: '.7rem',\n        cursor: 'pointer'\n    },\n    add: {\n        color: colorTheme.background,\n        fontSize: '3rem',\n        marginRight: '1rem',\n        cursor: 'pointer'\n    }\n});","import { StyleSheet, Text} from 'react-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React from 'react';\nimport { useEffect, useCallback } from 'react';\nimport { colorTheme } from '../global_colors';\n\nexport default function Title(props) {\n    const [fontsLoaded] = useFonts({\n        'TitanOne': require('../assets/fonts/TitanOne-Regular.ttf'),\n    });\n\n    useEffect(() => {\n        async function prepare() {\n            await SplashScreen.preventAutoHideAsync();\n        }\n        prepare();\n    }, []);\n\n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) {\n            await SplashScreen.hideAsync();\n        }\n    }, [fontsLoaded]);\n\n    if (!fontsLoaded) {\n        return null;\n    }\n\n    return (\n        <Text style={[styles.title, {backgroundColor: props.color}]} onLayout={onLayoutRootView}>devFit</Text>\n    );\n}\n\nconst styles = StyleSheet.create({\n    title: {\n        color: colorTheme.accent,\n        fontFamily: 'TitanOne',\n        fontSize: 60,\n        marginTop: 10\n    }\n});\n","import {useState} from 'react'\nimport { View, Text, Image } from 'react-native'\nimport BottomNavBar from '../components/BottomNavBar'\nimport Header from '../components/Header'\nimport Title from '../components/Title'\nimport quotes from '../assets/quotes.json';\nimport { StatusBar } from 'expo-status-bar'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_400Regular, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport EStyleSheet from 'react-native-extended-stylesheet'\nimport PieChart from 'react-native-pie-chart'\n\nexport default function MainScreen(props) {\n    let [fontsLoaded] = useFonts({Poppins_400Regular, Poppins_300Light})\n    const d = new Date()\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    let day = days[d.getDay()]\n\n\n    const getQuote = () => {\n        const d = new Date();\n        let time = d.getTime();\n        time = Math.round(time / 86400000)\n        const quoteNum = time % 99\n        let quote = quotes[quoteNum]\n        if(quote) {\n            return quote.split(' >')\n        } else {\n            return [\"Eight percent of success is showing up.\", \"Woody Allen\"]\n        }\n    }\n\n    const getWorkoutMessage = () => {\n        let split = 'Rest'\n        if(props.split.currentDay <= props.split.splits.length - 1) {\n            split = props.split.splits[Number(props.split.currentDay)]\n        }\n\n        if(split === 'Rest') {\n            return <Text style={[styles.reportText]}>Rest up! 😮‍💨😴</Text>\n        }else if(split === 'fill splits in settings!') {\n            return (\n            <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems:'center'}}>\n                <Text style={[styles.reportText]}>Enter split in settings!</Text>\n            </View>)\n        } else {\n            return (\n            <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-between', alignItems:'center'}}>\n                <Text style={[styles.reportText]}>Today's workout: {split}</Text>\n                <View style={[styles.completeButton]} onTouchEnd={() => props.completeWorkout({status: true, weeklyProgress: props.workoutComplete.weeklyProgress++})}>\n                    <Text style={styles.buttonText}>Complete?</Text>\n                </View>\n            </View>)\n        }\n    }\n\n    const getWorkoutCompleteMessage = () => {\n        let split = ''\n        if(props.split.currentDay <= props.split.splits.length - 1)\n            split = props.split.splits[props.split.currentDay]\n        if(split === 'fill splits in settings!') {\n            return <Text style={[styles.reportText]}>Workout complete! Feel the burn 🔥🔥</Text>\n        } else {\n            return <Text style={[styles.reportText]}>{split} workout complete! Feel the burn 🔥🔥</Text>\n        }\n    }\n\n    const getNutritionText = () => {\n        let nutritionPercent = Math.round(((props.progressBars[0].value / props.progressBars[0].goal) + (props.progressBars[1].value / props.progressBars[1].goal)) / 2 * 100)\n        if(Number.isNaN(nutritionPercent) || nutritionPercent === 0) {\n            return <Text style={[styles.reportText]}>Start tracking your nutrition today!</Text>\n        } else if(nutritionPercent >= 100) {\n            return <Text style={[styles.reportText]}>Nutritional goals reached, great work!</Text>\n        } else {\n            return <Text style={[styles.reportText]}>Nutritional goals {nutritionPercent}% complete, keep it up!</Text>\n        }\n    }\n\n    const quote = getQuote()\n    // test for long quote (too long, need to shrink)\n    // const quote = [\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",  \"Devin Edwards\"]\n\n    if(!fontsLoaded) {\n        return <></>\n    } else {\n        return (\n            <View style={styles.container}>\n                <StatusBar style=\"light\"/>\n                <View style={styles.mainContainer}>\n                    <Header onSwitch={props.onSwitch} />\n                    <Title />\n                    <View style={styles.boxContainer}>\n                        <View />\n                        <View style={[styles.box, styles.wideBox]}>\n                            <Text style={styles.cardTitle}>{day}'s Report</Text>\n                            <View style={styles.rule}/>\n                            <View style={styles.reportSection}>\n                                {props.workoutComplete.status ? \n                                <>{getWorkoutCompleteMessage()}</> :\n                                <>{getWorkoutMessage()}</>\n                                }\n                            </View>\n                            <View style={styles.rule}/>\n                            <View style={styles.reportSection}>\n                                {getNutritionText()}\n                            </View>\n                        </View>\n                        <View style={{flex: 1, flexDirection: 'row', width: '100%'}}>\n                            <View style={[styles.box, styles.narrowBox, {justifyContent: 'space-between', marginLeft: '1%', marginRight: '.5%'}]}>\n                                <View style={{width: '95%', flex: 1, flexDirection: 'row', \n                                alignItems: 'center', justifyContent: 'space-around'}}>\n                                    <Text style={[styles.cardTitle, styles.smallTitle]}>Weekly Progress</Text>\n                                    <Image style={styles.icon} source={require('../assets/icons/info_icon.png')}/> \n                                </View>\n                                <View style={[styles.rule, {width: '90%'}]} />\n                                <View style={{height: '78%'}}>\n                                    <PieChart widthAndHeight={styles.$pieSize} series={[2/3, 1]} style={styles.pieGap} \n                                    sliceColor={[colorTheme.mediumTheme, colorTheme.boldTheme]}/>\n                                </View>\n                            </View>\n                            <View style={[styles.box, styles.narrowBox, {marginLeft: '.5%', marginRight: '1%'}]}>\n                                <View style={{flex: 1}}><Text style={[styles.cardTitle, styles.smallTitle]}>Today in Fitness</Text></View>\n                                <View style={[styles.rule, {width: '90%'}]}/>\n                                <View style={{height: '78%'}}><Text style={[styles.body, styles.ruleGap]}>Coming Soon...</Text></View>\n                            </View>\n                        </View>\n                        <View style={[styles.box, styles.wideBox]}>\n                            <Text style={[styles.cardTitle, {height: '25%'}]}>Quote of the Day</Text>\n                            <View style={styles.rule}/>\n                            <View style={{flex: 1, justifyContent: 'center', maxHeight: '75%'}}>\n                                <Text style={[styles.body, styles.ruleGap]}>{quote[0]} ~{quote[1]}</Text>\n                            </View>\n                        </View>\n                        <View />\n                    </View>\n                </View>\n                <BottomNavBar onSwitch={props.onSwitch}/>\n            </View>\n        );        \n    }\n\n}\n \nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        backgroundColor: colorTheme.background,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    mainContainer: {\n        flex: 10,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        width: '100%'\n    },\n    boxContainer: {\n        flex: 9,\n        width: '100%',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n    },\n    cardTitle: {\n        marginTop: '.5rem',\n        marginBottom: '.5rem',\n        fontFamily: 'Poppins_400Regular',\n        fontSize: '1.7rem',\n        color: colorTheme.boldTheme\n    },\n    smallTitle: {\n        fontSize: '1.1rem'\n    },\n    rule: {\n        width: '96%',\n        borderTopWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    },\n    ruleGap: {\n        marginTop: '1rem'\n    },\n    wideBox: {\n        borderRadius: '.5rem',\n        maxWidth: '98%',\n        minWidth: '98%',\n        paddingLeft: '2%',\n        paddingRight: '2%',\n    },\n    narrowBox: {\n        borderRadius: '.5rem'\n    },\n    box: {\n        backgroundColor: colorTheme.lightTheme,\n        borderRadius: '.3rem',\n        flex: 1, \n        alignItems: 'center',\n        marginBottom: '1%'\n    },\n    body: {\n        fontSize: '1.2rem',\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme,\n        textAlign: 'center'\n    },\n    reportSection: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    reportText: {\n        fontSize: '1rem',\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme,\n        marginLeft: '1rem',\n        textAlign: 'center'\n    },\n    completeButton: {\n        marginRight: '1rem',\n        borderRadius: '.3rem',\n        backgroundColor: colorTheme.mediumTheme,\n        padding: '.5rem',\n        cursor: 'pointer'\n    },\n    buttonText: {\n        fontSize: '0.9rem',\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme\n    },\n    pieGap: {\n        marginTop: '.5rem',\n        flex: 3\n    },\n    icon: {\n        width: '1.3rem',\n        aspectRatio: 1 / 1\n    },\n    $pieSize: '7rem'\n});","import { View, Text } from 'react-native'\nimport { useState } from 'react';\nimport GestureRecognizer from 'react-native-swipe-gestures';\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function Card(props) {\n    const [del, setDelete] = useState(false)\n\n    const handleSwipeLeft = () => {\n        setDelete(true)\n    }\n\n    const handleSwipeRight = () => {\n        setDelete(false)\n    }\n\n    let [fontsLoaded] = useFonts({\n        Poppins_300Light\n      });\n    \n    if(!fontsLoaded) {\n        <></>\n    } else{\n        return (\n            <GestureRecognizer style={styles.card} onSwipeLeft={() => handleSwipeLeft()}\n            onSwipeRight={() => handleSwipeRight()}>\n                {del ? \n                <View style={styles.cardDel}>\n                    <View />\n                    <Text style={styles.cardText}>{props.title}</Text>\n                    <View style={styles.deleteButton} onTouchEnd={() => props.onDeleteCard(props.id)} onClick={() => props.onDeleteCard(props.id)}>\n                        <Text style={styles.deleteText}>Delete</Text>\n                    </View>\n                </View> :\n                <Text onTouchEnd={() => props.handleExpand({viewMode: true, id: props.id, title: props.title})} \n                onClick={() => props.handleExpand({viewMode: true, id: props.id, title: props.title})} \n                style={[styles.cardText, {cursor: 'pointer'}]}>{props.title}</Text>}\n            </GestureRecognizer>\n        );\n    }\n}\n \nconst styles = EStyleSheet.create({\n    card: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '5rem',\n        borderBottomWidth: 1,\n        borderColor: colorTheme.lightTheme\n    },\n    cardDel: {\n        flex: 1,\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        borderBottomWidth: 1,\n        borderColor: colorTheme.lightTheme,\n        cursor: 'pointer'\n    },\n    cardText: {\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme,\n        fontSize: '1.8rem'\n    },\n    deleteButton: {\n        height: '100%',\n        width: '6rem',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: colorTheme.boldTheme\n    }, \n    deleteText: {\n        color: colorTheme.lightTheme,\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem'\n    }\n});","import { View} from 'react-native';\nimport { colorTheme } from '../global_colors';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function Tag(props) {\n    const tagStyles = [styles.hollow, styles.red, styles.yellow, styles.green]\n    let tagStyle = styles.hollow\n    if(0 <= props.num < 4) {\n        tagStyle = tagStyles[props.num]\n    }\n\n    return (\n        <>\n        {props.editMode ?\n        <View style={[styles.editTag, styles.edit, tagStyle]} onTouchEnd={() => props.onTagClick(props.id, props.cardID)} \n        onClick={() => props.onTagClick(props.id, props.cardID)}/> :\n        <View style={[styles.tag, styles.static, tagStyle]}></View>}\n        </>\n    );\n}\n\nconst styles = EStyleSheet.create({\n    tag: {\n        position: 'absolute',\n        right: '45%',\n        top: '.3rem',\n        marginRight: '.2rem',\n        width: '1.4rem',\n        aspectRatio: 1 / 1,\n        borderRadius: '.7rem',\n        zIndex: 1\n    },\n    editTag: {\n        marginRight: '.2rem',\n        width: '1.4rem',\n        aspectRatio: 1 / 1,\n        borderRadius: '.7rem'\n    },\n    edit: {\n        opacity: .7,\n        borderWidth: 1\n    },\n    static: {\n        opacity: .3,\n        borderWidth: 0\n    },\n    hollow: {\n        borderStyle: 'dashed',\n        borderColor: colorTheme.boldTheme\n    },\n    red: {\n        backgroundColor: '#ff0000',\n        borderColor: '#ff0000'\n    },\n    yellow: {\n        backgroundColor: '#ffd60a',\n        borderColor: '#ffd60a'\n    }, \n    green: {\n        backgroundColor: '#06d6a0',\n        borderColor: '#06d6a0'\n    }\n});\n","import { View,  TextInput } from 'react-native'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport EStyleSheet from 'react-native-extended-stylesheet';\nimport Tag from './Tag';\n\nexport default function InputRow(props) {\n    let [fontsLoaded] = useFonts({\n        Poppins_300Light\n      });\n\n    if(!fontsLoaded) {\n        return <></>\n    } else {\n        return (\n            <View style={styles.rowTitle}>\n                <View style={[styles.textContainer, {minWidth: '55%'}]}>\n                    <TextInput style={[styles.inputText, {flex: 1}]} placeholder=\"enter workout\" placeholderTextColor={colorTheme.mediumTheme}\n                    onChangeText={(payload) => props.onRowText(payload, props.id, 0, props.cardID)} value={props.text[0]} />\n                    <Tag num={props.tagNo} editMode={true} onTagClick={props.onTagClick} cardID={props.cardID} id={props.id} />\n                </View>\n                <View style={[styles.numberText, styles.textContainer, {minWidth: '25%'}]}>\n                    <TextInput style={[styles.inputText]} placeholder=\"-\" placeholderTextColor={colorTheme.mediumTheme}\n                    onChangeText={(payload) => props.onRowText(payload, props.id, 1, props.cardID)} value={props.text[1]} />\n                </View>\n                <View style={[styles.numberText, styles.textContainer, {minWidth: '20%'}]}>\n                    <TextInput style={[styles.inputText]} placeholder=\"-\" placeholderTextColor={colorTheme.mediumTheme}\n                    onChangeText={(payload) => props.onRowText(payload, props.id, 2, props.cardID)} value={props.text[2]} />\n                </View>\n            </View>\n        );\n    } \n}\n\nconst styles = EStyleSheet.create({\n    container: {\n        flex: 0,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }, \n    rowTitle: {\n        flex: 0,\n        width: '98%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        borderBottomWidth: 1,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    },\n    inputText: {\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem',\n        lineHeight: '1.5rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.2rem',\n        marginRight: '.2rem'\n    },\n    textContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingTop: '.25rem',\n        paddingBottom: '.25rem'\n    },\n    numberText: {\n        borderLeftWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    }\n})","import { View, Text, } from 'react-native'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_500Medium} from '@expo-google-fonts/poppins';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function CardButtons(props) {\n    let [fontsLoaded] = useFonts({\n        Poppins_500Medium\n      });\n\n    if(!fontsLoaded) {\n        return <></>\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.button} onTouchEnd={() => props.onAdd(props.id)}\n            onClick={() => props.onAdd(props.id)}>\n                <Text style={styles.text}>add</Text>\n            </View>\n            <View style={styles.button} onTouchEnd={() => props.onDelete(props.id)}\n            onClick={() => props.onDelete(props.id)}>\n                <Text style={styles.text}>delete</Text>\n            </View>\n        </View>\n    );\n}\n\nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginTop: '.5rem',\n        marginBottom: '.3rem'\n    },\n    button: {\n        flex: 1,\n        alignItems: 'center',\n        borderWidth: 1,\n        borderColor: colorTheme.boldTheme,\n        padding: '.5rem',\n        borderRadius: '.5rem',\n        maxWidth: '5rem',\n        cursor: 'pointer'\n    },\n    text: {\n        fontFamily: 'Poppins_500Medium',\n        color: colorTheme.boldTheme,\n        fontSize: '1rem',\n    }\n});","import { View,  Text } from 'react-native'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport Tag from './Tag';\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function Row(props) {\n    let [fontsLoaded] = useFonts({\n        Poppins_300Light\n      });\n\n    if(!fontsLoaded) {\n        return <></>\n    } else {\n        let text0 = props.text[0]\n        let text1 = props.text[1]\n        let text2 = props.text[2]\n        if(!text0) {\n            text0 = 'no workout'\n            text1 = 'n/a'\n            text2 = 'n/a'\n        }\n        return (\n            <View style={styles.rowTitle}>\n                <Text style={[styles.inputText, styles.workoutText]}>{text0}</Text>\n                <Tag num={props.tagNo} editMode={false}/>\n                <View style={[styles.numberText, {width: '25%'}]}>\n                    <Text style={[styles.inputText]}>{text1}</Text>\n                </View>\n                <View style={[styles.numberText, {width: '20%'}]}>\n                    <Text style={[styles.inputText]}>{text2}</Text>\n                </View>\n            </View>\n        );\n    } \n}\n\nconst styles = EStyleSheet.create({\n    container: {\n        flex: 0,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }, \n    rowTitle: {\n        flex: 0,\n        width: '98%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        borderBottomWidth: 1,\n        borderLeftWidth: 1,\n        borderRightWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    },\n    inputText: {\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem',\n        lineHeight: '1.5rem',\n        marginTop: '.25rem',\n        marginBottom: '.25rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.2rem',\n    },\n    workoutText: {\n        width: '55%'\n    },\n    numberText: {\n        borderLeftWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    }\n})","import { View, Text, TextInput, Image } from 'react-native'\nimport { useState } from 'react';\nimport InputRow from './InputRow'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport CardButtons from './CardButtons'\nimport EStyleSheet from 'react-native-extended-stylesheet'\nimport Row from './Row'\n\n\nexport default function ExpandedCard(props) {\n    let [fontsLoaded] = useFonts({\n        Poppins_300Light\n      });\n    const [editMode, toggleEdit] = useState(false)\n    \n    if(!fontsLoaded) {\n        return <></>\n    } else{\n        let paddingBottom = editMode ? 0 : styles.$lightPad\n        return (\n            <View style={[styles.container, {paddingBottom: paddingBottom}]}>\n                <View style={styles.titleContainer}>\n                    <Image style={[styles.image, styles.close]} source={require('../assets/icons/close_icon2.png')} \n                    onTouchEnd={() => props.onCondense({viewMode: false, cardNo: 0})} onClick={() => props.onCondense({viewMode: false, cardNo: 0})}/>\n                    {editMode ? <TextInput style={styles.cardText} value={props.title} /> :\n                    <Text style={styles.cardText}>{props.title}</Text>}\n                    {editMode ? \n                    <Image style={[styles.image, styles.edit]} source={require('../assets/icons/editing_icon.jpeg')} \n                    onTouchEnd={() => toggleEdit(false)} onClick={() => toggleEdit(false)}/> :\n                    <Image style={[styles.image, styles.edit]} source={require('../assets/icons/not_editing_icon.jpeg')} \n                    onTouchEnd={() => toggleEdit(true)} onClick={() => toggleEdit(true)}/> }\n                </View>\n                <View style={{flex: 1, alignItems: 'center', width: '100%'}}>\n                    <View style={styles.rowTitle}>\n                        <Text style={[styles.inputText, styles.workoutText]}>workout</Text>\n                        <View style={[styles.numberText, {width: '25%'}]}><Text style={[styles.inputText]}>set x rep</Text></View>\n                        <View style={[styles.numberText, {width: '20%'}]}><Text style={[styles.inputText]}>weight</Text></View>\n                    </View>\n                    {editMode ? \n                    props.rows[props.id].map(row => <InputRow id={row.id} key={row.id} text={row.text} onRowText={props.onRowText}\n                    cardID={props.id} tagNo={row.tagNo} onTagClick={props.onTagClick}/>) :\n                    props.rows[props.id].map(row => <Row id={row.id} key={row.id} text={row.text} onRowText={props.onRowText}\n                    cardID={props.id} tagNo={row.tagNo}/>)}\n                </View>\n                {editMode ? <CardButtons onCondense={props.onCondense} onAdd={props.onAdd} onDelete={props.onDelete} id={props.id}/> : <></>}\n            </View>\n        );\n    }\n    }\n\nconst styles = EStyleSheet.create({\n    container: {\n        position: 'absolute',\n        width: '98%',\n        backgroundColor: colorTheme.lightTheme,\n        top: '30%',\n        borderRadius: '.2rem',\n        alignSelf: 'center',\n        zIndex: 1,\n        flex: 1,\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n    titleContainer: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    rowTitle: {\n        flex: 1,\n        width: '98%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        borderWidth: 1,\n        marginTop: '.2rem',\n        borderColor: colorTheme.mediumTheme\n    },\n    cardText: {\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme,\n        fontSize: '2rem',\n        marginTop: '.5rem',\n        textAlign: 'center'\n    }, \n    inputText: {\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem',\n        lineHeight: '2rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.2rem',\n    },\n    workoutText: {\n        width: '55%'\n    },\n    numberText: {\n        borderLeftWidth: 1,\n        borderColor: colorTheme.mediumTheme\n    },\n    image: {\n        aspectRatio: 1 / 1,\n        maxWidth: '2rem',\n        cursor: 'pointer'\n    },\n    close: {\n        width: '8%',\n        marginLeft: '.3rem'\n    },\n    edit: {\n        width: '9%',\n        borderRadius: '.5rem',\n        marginRight: '.3rem'\n    },\n    $lightPad: '.3rem'\n});","import { View, Text, ScrollView, ImageBackground } from 'react-native'\nimport { useState } from 'react'\nimport BottomNavBar from '../components/BottomNavBar'\nimport Card from '../components/Card'\nimport Header from '../components/Header'\nimport { colorTheme } from '../global_colors'\nimport {useFonts, Poppins_500Medium} from '@expo-google-fonts/poppins'\nimport ExpandedCard from '../components/ExpandedCard'\nimport EStyleSheet from 'react-native-extended-stylesheet'\n\n\nexport default function FitnessScreen(props) {\n    const cards = props.cards\n    let [fontsLoaded] = useFonts({Poppins_500Medium})\n    const [state, setState] = useState({viewMode: false, id: 0, title: ''})\n\n    if (!fontsLoaded) {\n        return <></>;\n    } else {\n        return (\n            <>\n            {\n                state.viewMode ? \n                <View style={styles.outerContainer}>\n                    <ExpandedCard onCondense={setState} title={state.title} onTitleChange={props.onTitleChange}\n                    id={state.id} rows={props.rows} onAdd={props.onAddRow} onDelete={props.onDeleteRow}\n                    onRowText={props.onRowText} onTagClick={props.onTagClick}/>\n                    <View style={[styles.innerContainer, styles.blur]}>\n                        <View style={{flex: 10}}>\n                            <Header screen=\"fitness\" onAdd={props.onAddCard} onSwitch={props.onSwitch}/>\n                            <View style={{flex: 9}}>\n                                <Text style={styles.title}>Workout Library</Text>\n                                <View style={styles.rule}/>\n                                <View>\n                                    {cards.map(card => <Card id={card.id} key={card.id} title={card.title}/>)}\n                                </View>\n                            </View>\n                        </View>\n                        <BottomNavBar onSwitch={props.onSwitch}/>\n                    </View>\n                </View> \n                :\n                <View style={styles.container}>\n                    <View style={{flex: 10}}>\n                        <Header screen=\"fitness\" onAdd={props.onAddCard} onSwitch={props.onSwitch}/>\n                        <View style={{flex: 9}}>\n                            <Text style={styles.title}>Workout Library</Text>\n                            <View style={styles.rule}/>\n                            <ScrollView>\n                                {cards.map(card => <Card id={card.id} key={card.id} title={card.title} onDeleteCard={props.onDeleteCard}\n                                handleExpand={setState}/>)}\n                            </ScrollView>\n                        </View>\n                    </View>\n                    <BottomNavBar onSwitch={props.onSwitch}/>\n                </View>\n            }\n            </>\n        );\n    }\n}\n \nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colorTheme.background,\n    },\n    title: {\n        fontSize: '2rem',\n        fontFamily: 'Poppins_500Medium',\n        color: colorTheme.accent,\n        textAlign: 'center',\n        marginTop: '.5rem',\n        marginBottom: '.5rem'\n    },\n    rule: {\n        width: '100%',\n        borderTopWidth: 1,\n        borderColor: colorTheme.lightTheme\n    },\n    outerContainer: {\n        position: 'relative',\n        flex: 1\n    },\n    innerContainer: {\n        flex: 1,\n        justifyContent: 'space-between'\n    },\n    blur: {\n        opacity: .2\n    }\n});","import { TextInput, View, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport { colorTheme } from '../global_colors';\nimport EStyleSheet from 'react-native-extended-stylesheet'\n\nexport default function SearchBar(props) {\n    const searchRef = React.createRef()\n    const [searchText, changeText] = useState('')\n    const submitSearch = () => {\n        searchRef.current.clear()\n        props.handleSearch(searchText)\n    }\n    \n    return (\n        <View style={styles.background}>\n            <View style={styles.searchBar}>\n                <Image style={styles.image} source={require('../assets/icons/search_icon.png')} />\n                <TextInput style={styles.searchText} placeholder='search nutrition database' \n                placeholderTextColor={colorTheme.mediumTheme} \n                onSubmitEditing={() => submitSearch()} ref={searchRef} \n                onChangeText={(load) => changeText(load)} autoCapitalize='none'/>\n            </View>\n        </View>\n    );\n}\n\nconst styles = EStyleSheet.create({\n    background: {\n        backgroundColor: colorTheme.bars,\n        height: '2.5rem',\n        width: '100%',\n    },\n    searchBar: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: colorTheme.background,\n        marginLeft: '1%',\n        marginTop: '.25rem',\n        marginBottom: '.25rem',\n        width: '98%',\n        height: '2rem',\n        padding: '.3rem',\n        borderRadius: '.5rem'\n    },\n    searchText: {\n        fontSize: '1.4rem',\n        fontFamily: 'Arial',\n        color: colorTheme.boldAccent,\n        marginLeft: '.2rem',\n        flex: 1\n    },\n    image: {\n        width: '1.8rem',\n        aspectRatio: 1 / 1,\n        alignSelf: 'center'\n    }\n});","import { ScrollView, View, Text} from 'react-native';\nimport { useState } from 'react';\nimport EStyleSheet from 'react-native-extended-stylesheet'\nimport { colorTheme } from '../global_colors';\nimport {useFonts, Poppins_500Medium, Poppins_400Regular, Poppins_300Light} from '@expo-google-fonts/poppins';\n\nexport default function SearchResults(props) {\n    let [fontsLoaded] = useFonts({Poppins_500Medium, Poppins_400Regular, Poppins_300Light})\n\n    if(!fontsLoaded) {\n        return <></>\n    }\n    return(\n        <View style={{flex: 1, flexGrow: 1, justifyContent: 'space-between'}}>\n            <View style={{flex: 1}}>\n                <Text style={styles.title}>Results</Text>\n                <ScrollView>\n                    {props.results.map((food, id) => \n                        <View style={[styles.container]} key={id}>\n                            <View>\n                                <Text style={styles.resultHeader}>{food.name}</Text>\n                                <Text style={styles.resultText}>Serving Size: {food.serving_size_g}g</Text>\n                                <Text style={styles.resultText}>Calories: {food.calories}</Text>\n                                <Text style={styles.resultText}>Protein Content: {food.protein_g}g</Text>\n                            </View>\n                            <View style={[styles.button, styles.submission]} onTouchEnd={() => props.onSubmission(food.calories, food.protein_g)}\n                            onClick={() => props.onSubmission(food.calories, food.protein_g)}>\n                                <Text style={styles.buttonText}>{\"\\u2713\"}</Text>\n                            </View>\n                        </View>\n                    )}\n                </ScrollView>\n            </View>\n            <View style={[styles.button, styles.return]} onTouchEnd={() => props.onReturn({searched: false})}\n            onClick={() => props.onReturn({searched: false})}>\n                <Text style={styles.buttonText}>Return {\"\\u21b2\"}</Text>\n            </View>\n        </View>\n    )\n}\n\nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '1rem'\n    },\n    title: {\n        fontFamily: 'Poppins_500Medium',\n        fontSize: '2rem',\n        color: colorTheme.accent,\n        alignSelf: 'center',\n        marginTop: '.5rem'\n    },\n    resultHeader: {\n        fontFamily: 'Poppins_400Regular',\n        fontSize: '1.3rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.3rem'\n    },\n    resultText: {\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.3rem'\n    }, \n    button: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '.5rem',\n        backgroundColor: colorTheme.lightTheme,\n        cursor: 'pointer'\n    },\n    submission: {\n        maxWidth: '2rem',\n        aspectRatio: 1/1,\n        borderRadius: '.6rem'\n    },\n    return: {\n        maxWidth: '98%',\n        maxHeight: '2rem'\n    },\n    buttonText: {\n        fontFamily: 'Poppins_300Light',\n        fontSize: '1rem',\n        color: colorTheme.boldTheme,\n    },\n    $checkSize: '1.2rem'\n});","import react, { useState } from 'react'\nimport { View, Text, TextInput, Keyboard } from 'react-native'\nimport BottomNavBar from '../components/BottomNavBar'\nimport Header from '../components/Header'\nimport SearchBar from '../components/SearchBar'\nimport { colorTheme } from '../global_colors'\nimport PieChart from 'react-native-pie-chart'\nimport EStyleSheet from 'react-native-extended-stylesheet'\nimport {useFonts, Poppins_500Medium, Poppins_400Regular, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport SearchResults from '../components/SearchResults'\n\nexport default function NutritionScreen(props) {\n    const input1 = react.createRef();\n    const input2 = react.createRef();\n    let [fontsLoaded] = useFonts({Poppins_500Medium, Poppins_400Regular, Poppins_300Light})\n    const [state, setState] = useState(\n        {\n            settingMode: false,\n            manualEntry: false,\n            searched: false,\n            currentCalorieValue: 0,\n            currentProteinValue: 0,\n            results: []\n        }\n    )\n\n    const handleSearch = async(searchText) => {\n        const url = 'https://nutrition-by-api-ninjas.p.rapidapi.com/v1/nutrition?query=' + searchText\n        const options = {\n            method: 'GET',\n            headers: {\n                'X-RapidAPI-Key': '019329eaffmsh9c1997011fad833p1447b9jsn04995410a57e',\n                'X-RapidAPI-Host': 'nutrition-by-api-ninjas.p.rapidapi.com'\n            }\n        }\n\n        try {\n            const response = await fetch(url, options);\n            const result = await response.json();\n            setState({...state, searched: true, results: result})\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const handleManualSubmission = () => {\n        props.onValueChange(state.currentCalorieValue, 1)\n        props.onValueChange(state.currentProteinValue, 2)\n        input1.current.clear()\n        input2.current.clear()\n        Keyboard.dismiss()\n        setState({\n            ...state,\n            currentCalorieValue: 0,\n            currentProteinValue: 0,\n            manualEntry: false\n        })\n    }\n\n    const handleSearchSubmission = (cals, prot) => {\n        props.onValueChange(cals, 1)\n        props.onValueChange(prot, 2)\n    }\n\n    const p0 = props.progressBars[0]\n    const p1 = props.progressBars[1]\n\n    const calcRatio = (val, goal) => {\n        if(goal === 0) return [0, 1]\n        const ratio = val / goal\n        const inv = 1 - ratio\n        if(ratio >= 1) {\n            return [1, 0]\n        }\n        return [ratio, inv]\n    }\n\n    if(!fontsLoaded) {\n        return <></>\n    } else {\n        return (\n            <View style={styles.container}>\n                <View style={{flex:10}}>\n                    {state.searched ? \n                    <View style={{flex: 1}}>\n                        <Header onSwitch={props.onSwitch} />\n                        <View style={{flex: 9}}>\n                            <SearchBar handleSearch={handleSearch}/>\n                            <SearchResults results={state.results} onSubmission={handleSearchSubmission} onReturn={setState}/>\n                        </View>\n                    </View> :\n                    <View style={styles.mainContainer}>\n                        <Header onSwitch={props.onSwitch} />\n                        <View style={styles.nutritionContainer}>\n                            <View style={styles.chartsAndSearch}>\n                                <SearchBar handleSearch={handleSearch}/>\n                                <View style={{flex: 9}}>\n                                    <Text style={styles.title}>Nutrition Tracker</Text>\n                                    <View style={styles.chartBox}>\n                                        <View style={styles.chartContainer}>\n                                            <PieChart widthAndHeight={styles.$pieSize} series={calcRatio(p0.value, p0.goal)}\n                                            sliceColor={[colorTheme.mediumTheme, colorTheme.boldTheme]} key={p0.id}/>\n                                            <View>\n                                                <Text style={styles.chartText}>calories</Text>\n                                                <Text style={styles.chartText}>{p0.value}/{p0.goal}</Text>\n                                            </View>\n                                        </View>\n                                        <View style={styles.chartContainer}>\n                                            <View>\n                                                <Text style={styles.chartText}>protein (g)</Text>\n                                                <Text style={styles.chartText}>{p1.value}/{p1.goal}</Text>\n                                            </View>\n                                            <PieChart widthAndHeight={styles.$pieSize} series={calcRatio(p1.value, p1.goal)}\n                                            sliceColor={[colorTheme.mediumTheme, colorTheme.boldTheme]} key={p1.id}/>\n                                        </View>\n                                    </View>\n                                </View>\n                            </View>\n                            <View style={{flex: 1, maxHeight: styles.$subHeight}}>\n                                <Text style={styles.submissionTitle}>Add as you eat!</Text>\n                                <View style={styles.submissionEntries}>\n                                    <View />\n                                    <TextInput style={styles.entryBox} placeholder='calories' placeholderTextColor={colorTheme.mediumTheme} ref={input1}\n                                    onChangeText={(load) => setState({...state, currentCalorieValue: load})} />\n                                    <TextInput style={styles.entryBox} placeholder='protein' placeholderTextColor={colorTheme.mediumTheme} ref={input2}\n                                    onChangeText={(load) => setState({...state, currentProteinValue: load})} />\n                                    <View style={styles.submissionButton} onTouchEnd={() => handleManualSubmission()}>\n                                        <Text style={{color: colorTheme.background}}>{\"\\u2713\"}</Text>\n                                    </View>\n                                    <View />\n                                </View>\n                            </View>\n                        </View>\n                    </View>\n                    }\n                </View>\n                <BottomNavBar onSwitch={props.onSwitch}/>\n            </View>\n        );\n    }\n}\n \nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'space-between'\n    },\n    mainContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        backgroundColor: colorTheme.background,\n    },\n    nutritionContainer: {\n        flex: 9,\n        justifyContent: 'space-between'\n    },\n    chartsAndSearch: {\n        flex: 1,\n        justifyContent: 'flex-start'\n    },\n    chartContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-around'\n    },\n    title: {\n        fontFamily: 'Poppins_500Medium',\n        fontSize: '2rem',\n        color: colorTheme.accent,\n        alignSelf: 'center',\n        marginTop: '.5rem'\n    },\n    chartText: {\n        fontSize: '1.5rem',\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme\n    },\n    chartBox: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-around'\n    },\n    submissionTitle: {\n        fontFamily: 'Poppins_400Regular',\n        fontSize: '.8rem',\n        lineHeight: '1rem',\n        color: colorTheme.boldTheme,\n        margin: '.25rem'\n    },\n    submissionEntries: {\n        flex: 1,\n        maxHeight: '3rem',\n        flexDirection: 'row',\n        backgroundColor: colorTheme.lightTheme,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    entryBox: {\n        flex: 1,\n        borderRadius: '.5rem',\n        minHeight: '2rem',\n        maxWidth: '40%',\n        backgroundColor: colorTheme.background,\n        borderWidth: 1,\n        borderColor: colorTheme.boldTheme,\n        fontFamily: 'Poppins_300Light',\n        color: colorTheme.boldTheme,\n        paddingLeft: '.3rem'\n    },\n    submissionButton: {\n        flex: 1,\n        maxWidth: '2rem',\n        aspectRatio: 1 / 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: '.5rem',\n        backgroundColor: colorTheme.mediumTheme,\n        cursor: 'pointer'\n    },\n    $subHeight: '4rem',\n    $pieSize: '13rem'\n});","import { Text, View, TextInput, ScrollView } from 'react-native';\nimport React, {useState} from 'react';\nimport Header from '../components/Header';\nimport BottomNavBar from '../components/BottomNavBar';\nimport EStyleSheet from 'react-native-extended-stylesheet';\nimport {useFonts, Poppins_500Medium, Poppins_400Regular, Poppins_300Light} from '@expo-google-fonts/poppins';\nimport { colorTheme } from '../global_colors';\nimport Toggle from 'react-native-toggle-input'\n\nexport default function SettingsScreen(props) {\n    let [fontsLoaded] = useFonts({Poppins_500Medium, Poppins_400Regular, Poppins_300Light})\n    const [currentCalorieValue, setCalories] = useState({cals: props.progressBars[0].value, editing: false})\n    const [currentProteinValue, setProtein] = useState({prot: props.progressBars[1].value, editing: false})\n    const [currentCalorieGoal, setCalorieGoal] = useState(\"\")\n    const [currentProteinGoal, setProteinGoal] = useState(\"\")\n\n    const submitValue = (id) => {\n        let value = id === 1 ? currentCalorieValue.cals : currentProteinValue.prot\n        if(!Number.isNaN(value)) {props.onValueAdjustment(value, id)}\n        id === 1 ? setCalories({...currentCalorieValue, editing: false}) : setProtein({...currentProteinValue, editing: false})\n    }\n\n    const submitGoal = (id) => {\n        let goal = id === 1 ? currentCalorieGoal : currentProteinGoal\n        props.onGoalSet(Number(goal), id)\n    }\n\n    const handleSplitEntry = (ind, load) => {\n        let tempSplits = props.split.splits\n        tempSplits[ind] = load\n        props.setSplit({...props.split, splits: tempSplits})\n    }\n\n    const getSplitText = ind => {\n        if(props.split.splits[ind] === 'fill splits in settings!') {\n            return \"\"\n        }\n        return props.split.splits[ind]\n    }\n\n    const handleSplitDay = (load) => {\n        let day = Number(load) - 1\n        if(Number.isInteger(day)) {\n            props.setSplit({...props.split, currentDay: day})\n            console.log(props.split.splits)\n        }\n        props.setSplit({...props.split, currentDay: 0})\n    }\n\n    const splitRows = Array.from({length: Number(props.split.rotationLength)}, (_, i) => i + 1)\n\n    if(!fontsLoaded) {\n        return <></>\n    } else {\n        return (\n            <View style={styles.container}>\n                <View style={{flex: 10}}>\n                    <Header screen='settings' onClose={props.onSwitch}/>\n                    <View style={{flex: 9}}>\n                    <Text style={styles.title}>Settings</Text>\n\n                    {/* General */}\n\n                    <Text style={styles.subtitle}>General</Text>\n                    <ScrollView>\n                    <View style={[styles.row, styles.topRow]}>\n                        <Text style={styles.rowText}>Allow Notifications</Text>\n                        <View style={styles.rightMargin}>\n                            <Toggle toggle={props.toggle1} setToggle={props.setToggle1} size={styles.$toggleSize} \n                            circleColor={colorTheme.lightTheme} filled={true} color={colorTheme.boldTheme}/>\n                        </View>\n                    </View>\n                    <View style={styles.row}>\n                        <Text style={styles.rowText}>Allow devFit to use your data</Text>\n                        <View style={styles.rightMargin}>\n                            <Toggle toggle={props.toggle2} setToggle={props.setToggle2} size={styles.$toggleSize} \n                            circleColor={colorTheme.lightTheme} filled={true} color={colorTheme.boldTheme}/>\n                        </View>\n                    </View>\n\n                    {/* GOALS */}\n\n                    <Text style={styles.subtitle}>Set Nutritional Goals</Text>\n                    <View style={[styles.row, styles.topRow]}>\n                        <Text style={styles.rowText}>Caloric intake</Text>\n                        <TextInput style={styles.inputText} value={props.progressBars[1].value} onChangeText={(load) => setCalorieGoal(load)} \n                        onSubmitEditing={() => submitGoal(1)}/>\n                    </View>\n                    <View style={[styles.row]}>\n                        <Text style={styles.rowText}>Grams of protein</Text>\n                        <TextInput style={styles.inputText} value={props.progressBars[1].value} onChangeText={(load) => setProteinGoal(load)} \n                        onSubmitEditing={() => submitGoal(2)}/>\n                    </View>\n\n                    {/* RESET VALUES */}\n\n                    <Text style={styles.subtitle}>Adjust Nutritional Entries</Text>\n                    <View style={[styles.buttonContainer, {borderBottomWidth: 1, borderTopWidth: 1, borderColor: colorTheme.mediumTheme}]}>\n                        <View style={[styles.row, {width: currentCalorieValue.editing ? '90%' : '100%', height: '100%', borderBottomWidth: currentCalorieValue.editing ? 0 : 1, borderTopWidth: currentCalorieValue.editing ? 0 : 1}]}>\n                            <Text style={styles.rowText}>Caloric intake</Text>\n                            <TextInput style={styles.inputText} onChangeText={(load) => setCalories({prot: Number(load), editing: true})}\n                                value={currentCalorieValue.cals} />\n                        </View>\n                        {currentCalorieValue.editing ? \n                        <View style={styles.submissionButton} onTouchEnd={() => submitValue(2)}>\n                        <Text style={{color: colorTheme.background}}>{\"\\u2713\"}</Text></View> : <></>}\n                    </View>\n                    <View style={[styles.buttonContainer, {borderBottomWidth: 1, borderColor: colorTheme.mediumTheme}]}>\n                        <View style={[styles.row, {width: currentProteinValue.editing ? '90%' : '100%', height: '100%', borderBottomWidth: currentProteinValue.editing ? 0 : 1}]}>\n                            <Text style={styles.rowText}>Grams of protein</Text>\n                            <TextInput style={styles.inputText} onChangeText={(load) => setProtein({prot: Number(load), editing: true})}\n                                value={currentProteinValue.prot} />\n                        </View>\n                        {currentProteinValue.editing ? \n                        <View style={styles.submissionButton} onTouchEnd={() => submitValue(2)}>\n                        <Text style={{color: colorTheme.background}}>{\"\\u2713\"}</Text></View> : <></>}\n                    </View>\n\n                    {/* Split Setting */}\n\n                    <Text style={styles.subtitle}>Home Screen Data</Text>\n                    <View style={[styles.row, styles.topRow]}>\n                        <Text style={styles.rowText}>Customize split rotation</Text>\n                        <View style={styles.rightMargin}>\n                            <Toggle toggle={props.toggle3} setToggle={props.setToggle3} size={styles.$toggleSize} \n                            circleColor={colorTheme.lightTheme} filled={true} color={colorTheme.boldTheme}/>\n                        </View>\n                    </View>\n                    {props.toggle3 ? \n                    <View>\n                        <View style={styles.row}>\n                            <Text style={styles.rowText}>Length of rotation (days)</Text>\n                            <TextInput style={styles.inputText} placeholder='7 (default)' \n                            placeholderTextColor={colorTheme.mediumTheme}\n                            onChangeText={load => props.setSplit({...props.split, rotationLength: load})}\n                                value={props.split.rotationLength}/>\n                        </View>\n                        {splitRows.map(e =>\n                        <View style={styles.row} key={e}>\n                            <Text style={styles.rowText}>Day {e}</Text>\n                            <TextInput style={styles.inputText} placeholder='title'\n                            onChangeText={(load) => handleSplitEntry(e - 1, load)} \n                            placeholderTextColor={colorTheme.mediumTheme} value={getSplitText(e - 1)} />\n                        </View>\n                        )}\n                        <View style={styles.row}>\n                            <Text style={styles.rowText}>Set current split day</Text>\n                            <TextInput style={styles.inputText} onChangeText={load => handleSplitDay(load)}\n                            placeholder={String(Number(props.split.currentDay) + 1)} placeholderTextColor={colorTheme.mediumTheme}/>\n                        </View>\n                    </View>\n                     :\n                    <></>\n                    }\n                    </ScrollView>\n                    </View>\n                </View>\n                <BottomNavBar onSwitch={props.onSwitch} />\n            </View>\n        );\n    }\n}\n\nconst styles = EStyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'space-between'\n    },\n    title: {\n        fontSize: '2rem',\n        fontFamily: 'Poppins_500Medium',\n        color: colorTheme.accent,\n        textAlign: 'center',\n        marginTop: '.5rem'\n    }, \n    subtitle: {\n        fontFamily: 'Poppins_400Regular',\n        fontSize: '1rem',\n        color: colorTheme.boldTheme,\n        marginTop: '1.5rem',\n        marginLeft: '.3rem'\n    },\n    topRow: {\n        borderTopWidth: 1\n    },\n    row: {\n        width: '100%',\n        minHeight: '3rem',\n        borderBottomWidth: 1,\n        borderColor: colorTheme.mediumTheme,\n        backgroundColor: colorTheme.lightTheme,\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    doubleRow: {\n        height: '6rem',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly'\n    },\n    rowText: {\n        fontFamily: 'Poppins_400Regular',\n        fontSize: '.9rem',\n        color: colorTheme.boldTheme,\n        marginLeft: '.3rem'\n    },\n    inputContainer: {\n        flex: 1, \n        flexDirection: 'row', \n        alignItems: 'center', \n        justifyContent: 'space-around',\n        height: '100%'\n    },\n    buttonContainer: {\n        width: '100%', \n        flex: 1, \n        flexDirection: 'row', \n        alignItems: 'center', \n        backgroundColor: colorTheme.lightTheme, \n        height: '3rem'\n    },\n    submissionButton :{\n        maxWidth: '2rem',\n        marginRight: '1%',\n        aspectRatio: 1/1,\n        borderRadius: '.25rem',\n        backgroundColor: colorTheme.accent,\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    inputText: {\n        width: '25%',\n        height: '80%',\n        textAlign: 'center',\n        color: colorTheme.boldTheme,\n        borderWidth: 1,\n        borderColor: colorTheme.mediumTheme,\n        marginRight: '.3rem',\n        borderRadius: '.2rem'\n    },\n    rightMargin: {\n        marginRight: '.3rem'\n    },\n    $toggleSize: '1.2rem',\n});","\nexport const demo_cards = [\n    {id: 0, title: 'Upper'},\n    {id: 1, title: 'Lower'},\n    {id: 2, title: 'Upper'},\n    {id: 3, title: 'Lower'}\n]\n\nexport const demo_split = ['Upper', 'Lower', 'Rest', 'Upper', 'Rest', 'Lower', 'Rest']\n\nexport const demo_rows = {\n    0: [\n        {id: 0, text: ['bench', '3 x 6', '225'], tagNo: 0},\n        {id: 1, text: ['lat pull down', '3 x 10', '160'], tagNo: 0},\n        {id: 2, text: ['ez bar curl', '3 x 8', '80'], tagNo: 0},\n        {id: 3, text: ['tricep pressdown', '3 x 12', '100'], tagNo: 0},\n        {id: 4, text: ['lat raise', '3 x 10', '30s'], tagNo: 0},\n        {id: 5, text: ['rear delt raise', '3 x 10', '25s'], tagNo: 0}\n    ],\n    1: [\n        {id: 0, text: ['squat', '4 x 5', '315'], tagNo: 0},\n        {id: 1, text: ['rdl', '3 x 8', '155'], tagNo: 0},\n        {id: 2, text: ['leg extensions', '3 x 12', '240'], tagNo: 0},\n        {id: 3, text: ['seated leg curl', '3 x 10', '180'], tagNo: 0},\n        {id: 4, text: ['seated calf raise', '4 x 14', '115'], tagNo: 0}\n    ],\n    2: [\n        {id: 0, text: ['oh press', '3 x 8', '115'], tagNo: 0},\n        {id: 1, text: ['dumbbell chess press', '3 x 8', '80s'], tagNo: 0},\n        {id: 2, text: ['lat row', '3 x 12', '160'], tagNo: 0},\n        {id: 3, text: ['hammer curl', '3 x 10', '35s'], tagNo: 0},\n        {id: 4, text: ['skull crusher', '3 x 12', '90'], tagNo: 0},\n        {id: 5, text: ['cable lat raise', '3 x 14', '20'], tagNo: 0}\n    ],\n    3: [\n        {id: 0, text: ['hack squat', '3 x 8', '200'], tagNo: 0},\n        {id: 1, text: ['glute bridge', '3 x 10', '225'], tagNo: 0},\n        {id: 2, text: ['leg press', '3 x 14', '400'], tagNo: 0},\n        {id: 3, text: ['lying leg curl', '3 x 10', '140'], tagNo: 0},\n        {id: 4, text: ['standing calf raise', '4 x 14', '225'], tagNo: 0}\n    ]\n    \n}\n\nexport const demo_bars = [{title: 'calories', value: 0, id: 1, goal: 2000},\n{title: 'protein', value: 0, id: 2, goal: 56}]","import { useState, useEffect } from 'react';\nimport MainScreen from './containers/MainScreen';\nimport FitnessScreen from './containers/FitnessScreen';\nimport NutritionScreen from './containers/NutritionScreen';\nimport AsyncStorage, { useAsyncStorage } from '@react-native-async-storage/async-storage';\nimport EStyleSheet from 'react-native-extended-stylesheet';\nimport SettingsScreen from './containers/Settings';\nimport * as demo_settings from './demo_settings'\n \nEStyleSheet.build({});\n\n\nexport default function App() {\n  let demoMode = true\n  let defaultCards = demoMode ? demo_settings.demo_cards : [{id: 0, title: 'edit'}]\n  let defaultRows = demoMode ? demo_settings.demo_rows : {0: [{id: 0, text: ['', '', ''], tagNo: 0}]}\n  let defaultBars = demoMode ? demo_settings.demo_bars : [{title: 'calories', value: 0, id: 1, goal: 0},\n  {title: 'protein', value: 0, id: 2, goal: 0}]\n  let defaultSplits = demoMode ? demo_settings.demo_split : Array(7).fill('fill splits in settings!')\n\n  const [currentScreen, setCurrentScreen] = useState(0)\n  const [cards, setCards] = useState(defaultCards)\n  const { setItem, getItem } = useAsyncStorage('@cards')\n  const [rows, setRows] = useState(defaultRows)\n  const [progressBars, setProgressBars] = useState(defaultBars)\n  const [workoutComplete, completeWorkout] = useState({status: false, weeklyProgress: 0})\n  const [split, setSplit] = useState({customRotation: false, splits: defaultSplits, \n  currentDay: 0, rotationLength: 7})\n  const [toggle1, setToggle1] = useState(false)\n  const [toggle2, setToggle2] = useState(false)\n  const [toggle3, setToggle3] = useState(false)\n\n  const handleToggle3 = (truth) => {\n    setToggle3(truth)\n    setSplit({...split, customRotation: truth})\n  }\n\n  const switchScreen = (screenNum) => {\n    setCurrentScreen(screenNum)\n  }\n\n  useEffect(() => {\n    loadWorkouts().catch(e => console.error(e))\n    loadProgress().catch(e => console.error(e))\n    loadRows().catch(e => console.error(e))\n    loadCompletion().catch(e => console.error(e))\n    loadSplits().catch(e => console.error(e))\n    loadLogin().catch(e => console.error(e))\n  }, []);\n\n  const handleAddCard = () => {\n    const tempCards = [...cards]\n    const cardNum = tempCards.length;\n    let uniqueID;\n    if(cardNum === 0) {\n      uniqueID = 1\n    } else {\n      const ids = tempCards.map(e => e.id)\n      uniqueID = Math.max.apply(null, ids) + 1\n    }\n    tempCards[cardNum] = {id: uniqueID, title: 'edit'}\n    const tempRows = {...rows}\n    tempRows[uniqueID] = [{ id: 0, text: ['','',''], tagNo: 0 }, ]\n    saveRows(tempRows)\n    saveWorkouts(tempCards)\n  }\n\n  const handleDeleteCard = (id) => {\n    const newCards = cards.filter(c => c.id !== id)\n    delete rows.id\n    saveRows(rows)\n    saveWorkouts(newCards)\n  }\n\n  const handleAddRow = (cardID) => {\n    const tempRows = {...rows}\n    const cardNum = tempRows[cardID].length;\n    tempRows[cardID][cardNum] = {id: cardNum, text: ['', '', ''], tagNo: 0}\n    saveRows(tempRows)\n  }\n\n  const handleDeleteRow = (cardID) => {\n    const tempRows = {...rows}\n    tempRows[cardID] = tempRows[cardID].filter(c => c.id !== tempRows[cardID].length - 1)\n    saveRows(tempRows)\n  }\n\n  const handleTitle = (title, id) => {\n    const newCards = [...cards]\n    newCards.forEach(element => {\n      if(element.id === id) {\n        element.title = title\n      }\n    });\n    saveWorkouts(newCards)\n  }\n\n  const handleRowText = (string, id, index, cardID) => {\n    const tempRows = {...rows}\n    tempRows[cardID].forEach(element => {\n      if(element.id === id) {\n        element.text[index] = string\n      }\n    });\n    saveRows(tempRows)\n  }\n\n  const handleTagClick = (id, cardID) => {\n    const tempRows = {...rows}\n    tempRows[cardID].forEach(element => {\n      if(element.id === id) {\n        if(Number.isNaN(element.tagNo)) {element.tagNo = 0}\n        element.tagNo = ((Number(element.tagNo) + 1) % 4)\n      }\n    });\n    saveRows(tempRows)\n  }\n\n  const handleGoal = (goal, id) => {\n    const tempProgressBars = [...progressBars]\n    if(Number.isNaN(goal)) return\n    tempProgressBars.forEach(element => {\n      if(element.id === id) {\n        element.goal = goal\n      }\n    });\n    saveProgress(tempProgressBars)\n  }\n\n  const handleValueChange = (val, id) => {\n    const tempProgressBars = [...progressBars]\n    if(Number.isNaN(val)) return\n    tempProgressBars.forEach(element => {\n      if(element.id === id) {\n        element.value += Number(val)\n      }\n    });\n    saveProgress(tempProgressBars)\n  }\n\n  const handleValueAdjustment = (val, id) => {\n    const tempProgressBars1 = [\n      {...progressBars[0], value: val},\n      {...progressBars[1]}\n    ]\n    const tempProgressBars2 = [\n      {...progressBars[0]},\n      {...progressBars[1], value: val}\n    ]\n    id === 1 ? saveProgress(tempProgressBars1) : saveProgress(tempProgressBars2)\n  }\n\n  const handleValueReset = () => {\n    const tempProgressBars = [\n      {...progressBars[0], value: 0},\n      {...progressBars[1], value: 0}\n    ]\n    saveProgress(tempProgressBars)\n  }\n\n  const saveCompletion = async truth => {\n    await AsyncStorage.setItem('@completion', JSON.stringify(truth)).catch(e => console.error(e))\n    completeWorkout(truth)\n  }\n\n  const saveSplits = async splits => {\n    await AsyncStorage.setItem('@splits', JSON.stringify(splits)).catch(e => console.error(e))\n    setSplit(splits)\n  }\n\n  const screens = [\n    <MainScreen onSwitch={switchScreen} progressBars={progressBars} workoutComplete={workoutComplete} completeWorkout={saveCompletion}\n    split={split}/>,\n    <FitnessScreen onSwitch={switchScreen} onDeleteCard={handleDeleteCard} rows={rows} onAddRow={handleAddRow}\n    onAddCard={handleAddCard} cards={cards} onTitleChange={handleTitle} onDeleteRow={handleDeleteRow}\n    onRowText={handleRowText} onTagClick={handleTagClick}/>,\n    <NutritionScreen onSwitch={switchScreen} onGoalSet={handleGoal} progressBars={progressBars}\n    onValueChange={handleValueChange} onReset={handleValueReset}/>,\n    <SettingsScreen onSwitch={switchScreen} onGoalSet={handleGoal} onReset={handleValueReset} progressBars={progressBars} \n    toggle3={toggle3} setToggle3={handleToggle3} toggle1={toggle1} setToggle1={setToggle1} toggle2={toggle2} \n    setToggle2={setToggle2} setSplit={saveSplits} split={split} onValueAdjustment={handleValueAdjustment}/>\n  ]\n\n  return (\n    <>{screens[currentScreen]}</>\n  );\n\n  async function saveProgress(value) {\n    await AsyncStorage.setItem('@progressBars', JSON.stringify(value))\n    setProgressBars(value)\n  }\n\n  async function loadProgress() {\n    const oldBars = await AsyncStorage.getItem('@progressBars').catch(e => console.error(e))\n    if(oldBars !== null) {\n      setProgressBars(JSON.parse(oldBars))\n    } else {\n      setProgressBars(progressBars)\n    }\n  }\n\n  async function saveRows(value) {\n    await AsyncStorage.setItem('@rows', JSON.stringify(value))\n    setRows(value)\n  }\n\n  async function loadRows() {\n    const oldRows = await AsyncStorage.getItem('@rows').catch(e => console.error(e))\n    if(oldRows !== null) {\n      setRows(JSON.parse(oldRows))\n    } else {\n      setRows(rows)\n    }\n  }\n\n  async function saveLogin(value) {\n    await AsyncStorage.setItem('@date', JSON.stringify(value))\n  }\n\n  async function loadLogin() {\n    const d = new Date()\n    let date = String(d.getMonth()) + ',' + String(d.getDate()) + ',' + String(d.getFullYear())\n    let lastDate = await AsyncStorage.getItem('@date').catch(e => console.error(e))\n    // test date\n    // date = '5,25,2023'\n    if(lastDate !== null) {\n      lastDate = JSON.parse(lastDate)\n      if (lastDate !== date) {\n        saveLogin(date)\n        handleValueReset()\n        saveCompletion({...workoutComplete, status: false})\n        date = date.split(',')\n        lastDate = lastDate.split(',')\n        if(lastDate.length === 3) {\n          const dif = Math.abs(Number(date[1]) - Number(lastDate[1]))\n          const cur = (split.currentDay + dif) % Number(split.rotationLength)\n          saveSplits({...split, currentDay: cur})\n        }\n      }\n    } else {\n      saveLogin(date)\n      handleValueReset()\n    }\n  }\n\n  async function loadSplits() {\n    const oldSplits = await AsyncStorage.getItem('@splits').catch(e => console.error(e))\n    if(oldSplits !== null) {\n      setSplit(JSON.parse(oldSplits))\n    } else {\n      setSplit(split)\n    }\n  }\n\n  async function loadCompletion() {\n    const status = await AsyncStorage.getItem('@completion').catch(e => console.error(e))\n    if(status !== null) {\n      completeWorkout(JSON.parse(status))\n    } else {\n      completeWorkout(false)\n    }\n  }\n\n  async function saveWorkouts(newCards) {\n    await setItem(JSON.stringify(newCards)).catch(e => console.error(e))\n    setCards(newCards)\n  }\n\n  async function loadWorkouts() {\n    const oldCards = await getItem().catch(e => console.error(e))\n    if(oldCards !== null) {\n      setCards(JSON.parse(oldCards))\n    } else {\n      setCards(cards)\n    }\n  }\n}\n","import { registerRootComponent } from 'expo';\nimport App from './src/App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}